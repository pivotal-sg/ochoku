// Code generated by protoc-gen-go.
// source: github.com/pivotal-sg/ochoku/userservice/proto/users.proto
// DO NOT EDIT!

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	github.com/pivotal-sg/ochoku/userservice/proto/users.proto

It has these top-level messages:
	RegistrationData
	LoginDetails
	UserDetails
	LoginStatus
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegistrationData struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *RegistrationData) Reset()                    { *m = RegistrationData{} }
func (m *RegistrationData) String() string            { return proto.CompactTextString(m) }
func (*RegistrationData) ProtoMessage()               {}
func (*RegistrationData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LoginDetails struct {
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
}

func (m *LoginDetails) Reset()                    { *m = LoginDetails{} }
func (m *LoginDetails) String() string            { return proto.CompactTextString(m) }
func (*LoginDetails) ProtoMessage()               {}
func (*LoginDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type UserDetails struct {
	HashedPassword string `protobuf:"bytes,6,opt,name=hashed_password,json=hashedPassword" json:"hashed_password,omitempty"`
	Name           string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Username       string `protobuf:"bytes,8,opt,name=username" json:"username,omitempty"`
	Joined         int64  `protobuf:"varint,9,opt,name=joined" json:"joined,omitempty"`
}

func (m *UserDetails) Reset()                    { *m = UserDetails{} }
func (m *UserDetails) String() string            { return proto.CompactTextString(m) }
func (*UserDetails) ProtoMessage()               {}
func (*UserDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type LoginStatus struct {
	Ok  bool   `protobuf:"varint,10,opt,name=ok" json:"ok,omitempty"`
	Msg string `protobuf:"bytes,11,opt,name=msg" json:"msg,omitempty"`
}

func (m *LoginStatus) Reset()                    { *m = LoginStatus{} }
func (m *LoginStatus) String() string            { return proto.CompactTextString(m) }
func (*LoginStatus) ProtoMessage()               {}
func (*LoginStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*RegistrationData)(nil), "RegistrationData")
	proto.RegisterType((*LoginDetails)(nil), "LoginDetails")
	proto.RegisterType((*UserDetails)(nil), "UserDetails")
	proto.RegisterType((*LoginStatus)(nil), "LoginStatus")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for User service

type UserClient interface {
	Register(ctx context.Context, in *RegistrationData, opts ...client.CallOption) (*UserDetails, error)
	PasswordLogin(ctx context.Context, in *LoginDetails, opts ...client.CallOption) (*LoginStatus, error)
}

type userClient struct {
	c           client.Client
	serviceName string
}

func NewUserClient(serviceName string, c client.Client) UserClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userClient) Register(ctx context.Context, in *RegistrationData, opts ...client.CallOption) (*UserDetails, error) {
	req := c.c.NewRequest(c.serviceName, "User.Register", in)
	out := new(UserDetails)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) PasswordLogin(ctx context.Context, in *LoginDetails, opts ...client.CallOption) (*LoginStatus, error) {
	req := c.c.NewRequest(c.serviceName, "User.PasswordLogin", in)
	out := new(LoginStatus)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserHandler interface {
	Register(context.Context, *RegistrationData, *UserDetails) error
	PasswordLogin(context.Context, *LoginDetails, *LoginStatus) error
}

func RegisterUserHandler(s server.Server, hdlr UserHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&User{hdlr}, opts...))
}

type User struct {
	UserHandler
}

func (h *User) Register(ctx context.Context, in *RegistrationData, out *UserDetails) error {
	return h.UserHandler.Register(ctx, in, out)
}

func (h *User) PasswordLogin(ctx context.Context, in *LoginDetails, out *LoginStatus) error {
	return h.UserHandler.PasswordLogin(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/pivotal-sg/ochoku/userservice/proto/users.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0xbb, 0x6f, 0xb3, 0x30,
	0x14, 0xc5, 0x43, 0x92, 0x2f, 0x1f, 0xb9, 0x79, 0x34, 0xf5, 0x50, 0xa1, 0x4c, 0x91, 0x97, 0xb2,
	0xc4, 0x48, 0xed, 0xd6, 0x39, 0xea, 0xd4, 0xa1, 0xa2, 0xea, 0xda, 0xca, 0x01, 0x0b, 0x5c, 0x02,
	0x17, 0xd9, 0x26, 0xdd, 0xfa, 0xb7, 0x57, 0x98, 0x92, 0x02, 0x43, 0xb7, 0xfb, 0xe0, 0x1c, 0x7e,
	0xf7, 0x18, 0x1e, 0x12, 0x69, 0xd2, 0xea, 0xc8, 0x22, 0xcc, 0x83, 0x52, 0x9e, 0xd1, 0xf0, 0xd3,
	0x5e, 0x27, 0x01, 0x46, 0x29, 0x66, 0x55, 0x50, 0x69, 0xa1, 0xb4, 0x50, 0x67, 0x19, 0x89, 0xa0,
	0x54, 0x68, 0xb0, 0x99, 0x30, 0x5b, 0xd3, 0x37, 0xd8, 0x84, 0x22, 0x91, 0xda, 0x28, 0x6e, 0x24,
	0x16, 0x07, 0x6e, 0x38, 0xd9, 0x82, 0x5b, 0x7f, 0x52, 0xf0, 0x5c, 0x78, 0xce, 0xce, 0xf1, 0xe7,
	0xe1, 0xa5, 0xaf, 0x77, 0x25, 0xd7, 0xfa, 0x13, 0x55, 0xec, 0x8d, 0x9b, 0x5d, 0xdb, 0x13, 0x02,
	0x53, 0xab, 0x99, 0xd8, 0xb9, 0xad, 0xe9, 0x23, 0x2c, 0x9f, 0x30, 0x91, 0xc5, 0x41, 0x18, 0x2e,
	0x4f, 0xba, 0xe7, 0x3d, 0xfd, 0xc3, 0xfb, 0x5f, 0xdf, 0x9b, 0x7e, 0xc1, 0xe2, 0x55, 0x0b, 0xd5,
	0xda, 0xdc, 0xc2, 0x55, 0xca, 0x75, 0x2a, 0xe2, 0xf7, 0x8b, 0x62, 0x66, 0x15, 0xeb, 0x66, 0xfc,
	0x3c, 0x64, 0xfa, 0xff, 0xcb, 0xd4, 0x63, 0x70, 0x07, 0x0c, 0x37, 0x30, 0xfb, 0x40, 0x59, 0x88,
	0xd8, 0x9b, 0xef, 0x1c, 0x7f, 0x12, 0xfe, 0x74, 0x34, 0x80, 0x85, 0xbd, 0xe3, 0xc5, 0x70, 0x53,
	0x69, 0xb2, 0x86, 0x31, 0x66, 0x1e, 0xec, 0x1c, 0xdf, 0x0d, 0xc7, 0x98, 0x91, 0x0d, 0x4c, 0x72,
	0x9d, 0x78, 0x0b, 0xeb, 0x56, 0x97, 0x77, 0x02, 0xa6, 0x35, 0x30, 0xd9, 0x83, 0xdb, 0x04, 0x2c,
	0x14, 0xb9, 0x66, 0xc3, 0xac, 0xb7, 0x4b, 0xd6, 0x39, 0x8b, 0x8e, 0x08, 0x83, 0x55, 0xcb, 0x6e,
	0xff, 0x47, 0x56, 0xac, 0x9b, 0xdf, 0x76, 0xc9, 0x3a, 0x18, 0x74, 0x74, 0x9c, 0xd9, 0x67, 0xbc,
	0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x7b, 0xcf, 0x2a, 0x04, 0x02, 0x00, 0x00,
}
