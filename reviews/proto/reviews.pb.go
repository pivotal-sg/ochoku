// Code generated by protoc-gen-go.
// source: reviews.proto
// DO NOT EDIT!

/*
Package reviews is a generated protocol buffer package.

It is generated from these files:
	reviews.proto

It has these top-level messages:
	ReviewRequest
	StatusResponse
*/
package reviews

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReviewRequest struct {
	Reviewer string `protobuf:"bytes,1,opt,name=reviewer" json:"reviewer,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Review   string `protobuf:"bytes,3,opt,name=review" json:"review,omitempty"`
	Rating   int32  `protobuf:"varint,4,opt,name=rating" json:"rating,omitempty"`
}

func (m *ReviewRequest) Reset()                    { *m = ReviewRequest{} }
func (m *ReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*ReviewRequest) ProtoMessage()               {}
func (*ReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StatusResponse struct {
	Message string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Success bool   `protobuf:"varint,6,opt,name=success" json:"success,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*ReviewRequest)(nil), "ReviewRequest")
	proto.RegisterType((*StatusResponse)(nil), "StatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Reviewer service

type ReviewerClient interface {
	Review(ctx context.Context, in *ReviewRequest, opts ...client.CallOption) (*StatusResponse, error)
}

type reviewerClient struct {
	c           client.Client
	serviceName string
}

func NewReviewerClient(serviceName string, c client.Client) ReviewerClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "reviewer"
	}
	return &reviewerClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *reviewerClient) Review(ctx context.Context, in *ReviewRequest, opts ...client.CallOption) (*StatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Reviewer.Review", in)
	out := new(StatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Reviewer service

type ReviewerHandler interface {
	Review(context.Context, *ReviewRequest, *StatusResponse) error
}

func RegisterReviewerHandler(s server.Server, hdlr ReviewerHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Reviewer{hdlr}, opts...))
}

type Reviewer struct {
	ReviewerHandler
}

func (h *Reviewer) Review(ctx context.Context, in *ReviewRequest, out *StatusResponse) error {
	return h.ReviewerHandler.Review(ctx, in, out)
}

func init() { proto.RegisterFile("reviews.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8f, 0xc1, 0xae, 0x82, 0x30,
	0x10, 0x45, 0x1f, 0xef, 0x41, 0x1f, 0x4e, 0x02, 0x26, 0x5d, 0x98, 0x86, 0x95, 0x61, 0x65, 0x62,
	0xc2, 0x42, 0x17, 0xfe, 0x80, 0x5f, 0x30, 0x7e, 0x41, 0x25, 0x13, 0xc2, 0x02, 0x8a, 0x4c, 0xd1,
	0xdf, 0x17, 0x07, 0x30, 0x61, 0x77, 0xcf, 0xb9, 0x4d, 0xdb, 0x0b, 0x49, 0x4f, 0xcf, 0x9a, 0x5e,
	0x5c, 0x74, 0xbd, 0xf3, 0x2e, 0x77, 0x90, 0xa0, 0x08, 0xa4, 0xc7, 0x40, 0xec, 0x75, 0x06, 0xf1,
	0x74, 0x82, 0x7a, 0x13, 0xec, 0x83, 0xc3, 0x06, 0xbf, 0xac, 0x35, 0x84, 0xad, 0x6d, 0xc8, 0xfc,
	0x8a, 0x97, 0xac, 0x77, 0xa0, 0xa6, 0xde, 0xfc, 0x89, 0x9d, 0x49, 0xbc, 0xf5, 0x75, 0x5b, 0x99,
	0x70, 0xf4, 0x11, 0xce, 0x94, 0x5f, 0x21, 0xbd, 0x79, 0xeb, 0x07, 0x46, 0xe2, 0xce, 0xb5, 0x4c,
	0xda, 0xc0, 0x7f, 0x43, 0xcc, 0xb6, 0x22, 0x13, 0xc9, 0x15, 0x0b, 0x7e, 0x1a, 0x1e, 0xca, 0x72,
	0x24, 0xa3, 0xc6, 0x26, 0xc6, 0x05, 0x4f, 0x17, 0x88, 0x71, 0xf9, 0xd5, 0x11, 0xd4, 0x94, 0x75,
	0x5a, 0xac, 0xb6, 0x64, 0xdb, 0x62, 0xfd, 0x54, 0xfe, 0x73, 0x57, 0x32, 0xfb, 0xfc, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x0e, 0x7b, 0xb0, 0xd6, 0x07, 0x01, 0x00, 0x00,
}
